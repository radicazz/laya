name: Pull Request Validation

on:
  pull_request:
    branches: [ master, develop ]

jobs:
  quick-check:
    name: Quick Validation
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Cache SDL3 build
      uses: actions/cache@v4
      with:
        path: |
          build/external
          external/SDL/build
        key: ${{ runner.os }}-gcc-sdl3-${{ hashFiles('external/SDL/**') }}
        restore-keys: |
          ${{ runner.os }}-gcc-sdl3-

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          ninja-build \
          pkg-config \
          gcc-11 \
          g++-11 \
          clang-format-14 \
          clang-tidy-14 \
          libfreetype6-dev \
          libharfbuzz-dev \
          libpng-dev \
          libjpeg-dev \
          libtiff-dev \
          zlib1g-dev \
          xvfb

    - name: Setup headless display
      run: |
        # Start virtual display for headless testing
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        sleep 3
        echo "DISPLAY=:99" >> $GITHUB_ENV

    - name: Check code formatting
      run: |
        # Check if code is properly formatted
        find src include tests examples -name "*.cpp" -o -name "*.hpp" | \
        xargs clang-format-14 --dry-run --Werror

    - name: Configure CMake (Debug)
      run: |
        CC=gcc-11 CXX=g++-11 cmake -B build \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=Debug \
          -DLAYA_BUILD_TESTS=ON \
          -DLAYA_BUILD_EXAMPLES=ON \
          -DLAYA_SDL_METHOD=submodule \
          -DLAYA_BUILD_SHARED=ON \
          -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

    - name: Build
      run: cmake --build build --parallel

    - name: Run tests
      working-directory: build
      run: ctest --output-on-failure --parallel

    - name: Quick static analysis
      run: |
        # Run clang-tidy on changed files only
        if [ -n "${{ github.event.pull_request.base.sha }}" ]; then
          # Get list of changed C++ files
          git diff --name-only ${{ github.event.pull_request.base.sha }} HEAD | \
          grep -E '\.(cpp|hpp)$' | \
          head -10 | \
          xargs -r clang-tidy-14 -p build --config-file=.clang-tidy || true
        fi

  build-ubuntu:
    name: Ubuntu Build Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Cache SDL3 build
      uses: actions/cache@v4
      with:
        path: |
          build/external
          external/SDL/build
        key: ubuntu-gcc-sdl3-${{ hashFiles('external/SDL/**') }}
        restore-keys: |
          ubuntu-gcc-sdl3-

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          ninja-build \
          pkg-config \
          gcc-11 \
          g++-11 \
          libasound2-dev \
          libpulse-dev \
          libx11-dev \
          libxext-dev \
          libxrandr-dev \
          libxcursor-dev \
          libxfixes-dev \
          libxi-dev \
          libgl1-mesa-dev \
          libegl1-mesa-dev \
          libfreetype6-dev \
          libharfbuzz-dev \
          libpng-dev \
          libjpeg-dev \
          libtiff-dev \
          zlib1g-dev \
          xvfb

    - name: Setup headless display
      run: |
        # Start virtual display for headless testing
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        sleep 3
        echo "DISPLAY=:99" >> $GITHUB_ENV

    - name: Configure CMake
      run: |
        CC=gcc-11 CXX=g++-11 cmake -B build \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=Debug \
          -DLAYA_BUILD_TESTS=ON \
          -DLAYA_BUILD_EXAMPLES=ON \
          -DLAYA_SDL_METHOD=submodule \
          -DLAYA_BUILD_SHARED=ON

    - name: Build
      run: |
        cmake --build build --parallel

    - name: Test
      working-directory: build
      run: |
        ctest --output-on-failure

  build-windows:
    name: Windows Build Check
    runs-on: windows-latest
    if: github.base_ref == 'master'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Cache SDL3 build
      uses: actions/cache@v4
      with:
        path: |
          build/external
          external/SDL/build
        key: windows-msvc-sdl3-${{ hashFiles('external/SDL/**') }}
        restore-keys: |
          windows-msvc-sdl3-

    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v1.3

    - name: Configure CMake
      run: |
        cmake -B build `
          -G "Visual Studio 17 2022" -A x64 `
          -DCMAKE_BUILD_TYPE=Debug `
          -DLAYA_BUILD_TESTS=ON `
          -DLAYA_BUILD_EXAMPLES=ON `
          -DLAYA_SDL_METHOD=submodule `
          -DLAYA_BUILD_SHARED=ON

    - name: Build
      run: |
        cmake --build build --config Debug --parallel

    - name: Test
      working-directory: build
      run: |
        ctest --build-config Debug --output-on-failure
