name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v0.1.0)'
        required: true
        type: string

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get version
      id: get_version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Generate changelog
      run: |
        LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [[ -n "$LAST_TAG" ]]; then
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" $LAST_TAG..HEAD)
        else
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" --max-count=20)
        fi

        cat > changelog.md << EOF
        ## What's Changed

        $CHANGELOG

        **Full Changelog**: https://github.com/${{ github.repository }}/compare/$LAST_TAG...${{ steps.get_version.outputs.VERSION }}
        EOF

    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        PRERELEASE_FLAG=""
        if [[ "${{ steps.get_version.outputs.VERSION }}" == *"alpha"* ]] || [[ "${{ steps.get_version.outputs.VERSION }}" == *"beta"* ]] || [[ "${{ steps.get_version.outputs.VERSION }}" == *"rc"* ]]; then
          PRERELEASE_FLAG="--prerelease"
        fi

        gh release create "${{ steps.get_version.outputs.VERSION }}" \
          --title "laya ${{ steps.get_version.outputs.VERSION }}" \
          --notes-file changelog.md \
          $PRERELEASE_FLAG

  trigger-builds:
    name: Trigger Release Builds
    needs: create-release
    runs-on: ubuntu-latest

    steps:
    - name: Trigger Linux builds
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh workflow run build_linux.yml --ref ${{ github.ref }}

    - name: Trigger Windows builds
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh workflow run build_windows.yml --ref ${{ github.ref }}

    - name: Wait for builds to complete
      run: |
        echo "Builds triggered. Release artifacts will be available from the build workflows."
        echo "Linux artifacts: laya-linux-gcc-Release, laya-linux-clang-Release"
        echo "Windows artifacts: laya-windows-msvc-Release"

  create-source-package:
    name: Create Source Package
    needs: create-release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Create source archive
      run: |
        VERSION_NO_V=$(echo "${{ needs.create-release.outputs.version }}" | sed 's/^v//')
        ARCHIVE_NAME="laya-${VERSION_NO_V}-source"

        # Create source archive excluding build artifacts
        tar --exclude='.git' \
            --exclude='build' \
            --exclude='*.user' \
            --exclude='.vs' \
            --exclude='.vscode' \
            -czf "${ARCHIVE_NAME}.tar.gz" \
            --transform "s,^,${ARCHIVE_NAME}/," \
            .

    - name: Upload source archive
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION_NO_V=$(echo "${{ needs.create-release.outputs.version }}" | sed 's/^v//')
        gh release upload "${{ needs.create-release.outputs.version }}" "laya-${VERSION_NO_V}-source.tar.gz"
